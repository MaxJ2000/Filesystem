!function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);var n={mutiCMD:/^(?<CMD>[\w\d\-\_\?]+)(?<params>(\ +(?<pre>[^\-\\\/\w\d\s\n\r]?)[^\"]*\k<pre>)*)?/,paraCMD:/\s*[-]+[A-Za-z]+/},i=function(){function t(t,e,r){void 0===r&&(r=""),this.type=t,this.name=e,this.content=r,this.child=[],this.getChild=function(){return null}}return t.prototype.getFather=function(){throw new Error("You have been in the root!")},t}(),o=new(function(){function t(){this.loadData()}return t.prototype.getInput=function(t){var e,r;e="0";try{(function(){if(r=n.mutiCMD.exec(t)){var i=r.groups;if(!i)throw new Error("Illegal Input!");switch(i.CMD){case"cd":e=this.cd(i.para);break;case"ls":e=this.ls(i.para);break;case"echo":e=this.echo(i.para);break;case"mdkir":e=this.mkdir(i.para);break;case"rm":e=this.rm(i.para);break;case"cp":e=this.cp(i.para);break;case"touch":e=this.touch(i.para);break;case"cat":e=this.cat(i.para);break;default:throw new Error("Illegal Input!")}}}).bind(this)()}catch(t){return t.toString()}return e},t.prototype.loadData=function(){var t=localStorage.getItem("filesystem");t||(this.rootDirObj=JSON.parse(t))},t.prototype.addDirFunc=function(){function t(t){for(var e=0,r=this.child;e<r.length;e++){var n=r[e];if(n.name===t)return n}throw new Error("File'"+t+"' not found!")}function e(t){return function(t){return function(){return t}}(t)}this.rootDirObj.getChild=t,this.rootDirObj.getFather=function(){throw new Error("You have been in the root!")},function r(n){for(var i=0,o=n.child;i<o.length;i++){var u=o[i];u.getChild=t,u.getFather=e(n),u.child.length&&r(u)}}(this.curDirObj)},t.prototype.parsePath=function(t){for(var e,r=0,n=t.split("/");r<n.length;r++){var i=n[r];switch(i){case"..":if(e){e=e.getFather();break}e=this.curDirObj.getFather();case".":if(e)break;e=this.curDirObj;break;default:if(e)e=e.getChild(i);else{if(this.rootDirObj.name!==i)throw new Error("Direction'"+i+"' not found!");e=this.rootDirObj}}}return e},t.prototype.ls=function(t){var e=[],r=!1;t.match(/-a/)&&(r=!0);for(var n=0,i=this.curDirObj.child;n<i.length;n++){var o=i[n];!0===r?e.push(o.name):"."!=o.name[0]&&e.push(o.name)}return e.join("&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp")},t.prototype.echo=function(t){return t},t.prototype.mkdir=function(t){for(var e,r=t.split("/"),n=r.pop(),o=0,u=(e=0===r.length?this.curDirObj:this.parsePath(r.join("/"))).child;o<u.length;o++){if(u[o].name===n)throw new Error(n+" have been existed!")}return e.child.push(new i("dir",n)),"0"},t.prototype.touch=function(t){for(var e,r=t.split("/"),n=r.pop(),o=0,u=(e=0===r.length?this.curDirObj:this.parsePath(r.join("/"))).child;o<u.length;o++){if(u[o].name===n)throw new Error(n+" have been existed!")}return e.child.push(new i("file",n)),"0"},t.prototype.cd=function(t){return this.curDirObj=this.parsePath(t),"0"},t.prototype.cp=function(t){return"0"},t.prototype.rm=function(t){return"0"},t.prototype.cat=function(t){return"0"},t}());new(function(){function t(t){this.rootDiv=t,this.stdout=this.rootDiv.querySelector(".stdout"),this.stdin=this.rootDiv.querySelector(".stdin"),this.inputElement=this.stdin.querySelector(".stdinInput"),this.inputText="",this.displayString=""}return t.prototype.getEnter=function(){this.inputText=this.inputElement.value,console.log(this.inputText),this.inputElement.value="",this.displayString=o.getInput(this.inputText),this.addStdin},t.prototype.addStdin=function(){"0"===this.inputText?this.inputText="":this.inputText="<div>"+this.inputText+"</div><br/>",this.stdout.innerHTML=this.stdout.innerHTML+"\n    <div>[root@MaxJ ~]  "+this.inputText+"</div>\n    "+this.displayString},t.prototype.addListener=function(){var t=this;this.inputElement.addEventListener("keydown",function(e){"Enter"===e.key&&t.getEnter()})},t.prototype.initial=function(){this.addListener()},t}())(document.querySelector(".root")).initial()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,